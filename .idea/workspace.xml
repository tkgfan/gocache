<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="92c344ed-5946-4859-894a-d32537931b9b" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/tkgcache/consistenthash/consistenthash.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tkgcache/consistenthash/consistenthash_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tkgcache/http.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tkgcache/peers.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tkgcache/singleflight/singleflight.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cache/byteview.go" beforeDir="false" afterPath="$PROJECT_DIR$/tkgcache/byteview.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cache/cache.go" beforeDir="false" afterPath="$PROJECT_DIR$/tkgcache/cache.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cache/http.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cache/lru/lru.go" beforeDir="false" afterPath="$PROJECT_DIR$/tkgcache/lru/lru.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cache/lru/lru_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/tkgcache/lru/lru_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cache/tkgcache.go" beforeDir="false" afterPath="$PROJECT_DIR$/tkgcache/tkgcache.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cache/tkgcache_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/tkgcache/tkgcache_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/main.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$PROJECT_DIR$/../../../../Program Files/Go/go1.18" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2DO9YCVVSH8UMXgEVXyvr3OosUc" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.format.on.save.advertiser.fired&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/TKG&quot;
  }
}</component>
  <component name="RunManager" selected="Go Test.TestGet in golang-cache/tkgcache">
    <configuration name="go build golang-cache" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="golang-cache" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="golang-cache" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="TestGet in golang-cache/tkgcache" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="golang-cache" />
      <working_directory value="$PROJECT_DIR$/tkgcache" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="golang-cache/tkgcache" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGet\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetterFunc_Get in golang-cache/tkgcache" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="golang-cache" />
      <working_directory value="$PROJECT_DIR$/tkgcache" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="golang-cache/tkgcache" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetterFunc_Get\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestHashing in golang-cache/cache/consistenthash" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="golang-cache" />
      <working_directory value="$PROJECT_DIR$/cache/consistenthash" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="golang-cache/cache/consistenthash" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestHashing\E$" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go Build.go build golang-cache" />
      <item itemvalue="Go Test.TestGet in golang-cache/tkgcache" />
      <item itemvalue="Go Test.TestGetterFunc_Get in golang-cache/tkgcache" />
      <item itemvalue="Go Test.TestHashing in golang-cache/cache/consistenthash" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestGet in golang-cache/tkgcache" />
        <item itemvalue="Go Test.TestGetterFunc_Get in golang-cache/tkgcache" />
        <item itemvalue="Go Build.go build golang-cache" />
        <item itemvalue="Go Test.TestHashing in golang-cache/cache/consistenthash" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>